@mixin widthify($divide: 0, $division: 0, $breakpoint: 0) {
  $bp: "";
  @if $breakpoint != 0 {
    $bp: "#{$breakpoint}\\:";
  }

  .#{$bp}#{map-get($classnames, width)}-#{$division}\/#{$divide} {
    width: (100% / $divide) * $division;
  }

  @if $breakpoint == 0 {
    $addme: add-to-apply-map("#{$bp}#{map-get($classnames, width)}-#{$division}/#{$divide}", "width", "#{(100% / $divide) * $division}");
  }
}

$grid-size: 12 !default;
$grid-full: true !default;
$grid-single: false !default;

@if index($components, grid) {
  :root {
    // No Breakpoints
    @if $grid-single {
      @for $i from 1 through $grid-size {
        .#{map-get($classnames, width)}-#{$i} {
          width: (100% / $grid-size) * $i;
        }

        $addme: add-to-apply-map("#{map-get($classnames, width)}-#{$i}", "width", "#{(100% / $grid-size) * $i}");
      }
    } @else {
      @for $i from 1 through $grid-size {
        @if $grid-full {
          @for $j from 1 through $i {
            @include widthify($i, $j);
          }
        } @else {
          @include widthify($i, 1);
        }
      }
    }

    // Breakpoints
    @if $grid-single {
      @each $breakpoint, $breakpoint-value in $breakpoints {
        @include breakpoint($breakpoint) {
          @for $i from 1 through $grid-size {
            .#{$breakpoint}\:#{map-get($classnames, width)}-#{$i} {
              width: (100% / $grid-size) * $i;
            }
          }
        }
      }
    } @else {
      @each $breakpoint, $breakpoint-value in $breakpoints {
        @include breakpoint($breakpoint) {
          @for $i from 1 through $grid-size {
            @if $grid-full {
              @for $j from 1 through $i {
                @include widthify($i, $j, $breakpoint);
              }
            } @else {
              @include widthify($i, 1, $breakpoint);
            }
          }
        }
      }
    }

    @if map-get($breakpoints, mw) {
      .#{map-get($classnames, width)}-max {
        max-width: map-get($breakpoints, mw);
      }
    }

    .h-1\/1 {
      height: 100%;
    }

    .h-auto {
      height: auto;
    }
  }
}
